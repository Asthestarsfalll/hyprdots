
# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
$allow_workspace_cycles = true
# Main modifier
$mainMod = ALT

# assign apps
# $term = wezterm start --always-new-process
$term = GTK_IM_MODULE=wayland ghostty
$editor = code --ozone-platform-hint=wayland --disable-gpu
$file = dolphin
$browser = google-chrome-stable

# Window/Session actions
bind = $mainMod SHIFT, C, exec, $scrPath/dontkillsteam.sh # killactive, kill the window on focus
bind = $mainMod SHIFT CONTROL, Q, exit, # kill hyperland session
bind = $mainMod, F, togglefloating, # toggle the window on focus to float
bind = $mainMod, G, togglegroup, # toggle the window on focus to group (tab mode)
bind = $mainMod, M, fullscreen, # toggle the window on focus to fullscreen
# bind = $SUPER, L, exec, swaylock # lock screen
bind = $SUPER, L, exec, hyprlock -c ~/.config/hypr/hyprlock.conf # lock screen
bind = $mainMod SHIFT, U, exec, $scrPath/windowpin.sh # toggle pin on focused window
bind = $mainMod, backspace, exec, $scrPath/logoutlaunch.sh 1 # logout menu
# bind = Ctrl+Alt, W, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh) # toggle waybar and reload config
bind = $CONTROL, ESCAPE, exec, killall waybar || waybar # toggle waybar

# Application shortcuts
bind = $mainMod SHIFT, RETURN, exec, $term  # open terminal
# bind = $SUPER, E, exec, $file # open file manager
bind = $SUPER, E, exec, pypr toggle filemanager # open file manager
bind = $mainMod, ESCAPE, exec, pypr toggle filemanager # open file manager
bind = $mainMod, v, exec, $editor # open vscode
# bind = $mainMod, X, exec, $scrPath/exec_if_not_existed.sh $browser # open browser
bind = $CONTROL SHIFT, ESCAPE, exec, $scrPath/sysmonlaunch.sh  # open htop/btop if installed or default to top (system monitor)

# Rofi is toggled on/off if you repeat the key presses
bind = $CONTROL, SPACE, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch desktop applications
#bind = $mainMod, tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # switch between desktop applications
bind = $mainMod, R, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # browse system files

# Audio control
bindl  = , F10, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bindel = , F11, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindel = , F12, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioMute, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bindl  = , XF86AudioMicMute, exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
bindel = , XF86AudioLowerVolume, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindel = , XF86AudioRaiseVolume, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioPlay, exec, playerctl play-pause
bindl  = , XF86AudioPause, exec, playerctl play-pause
bindl  = , XF86AudioNext, exec, playerctl next
bindl  = , XF86AudioPrev, exec, playerctl previous

# Brightness control
bindel = , XF86MonBrightnessUp, exec, $scrPath/brightnesscontrol.sh i # increase brightness
bindel = , XF86MonBrightnessDown, exec, $scrPath/brightnesscontrol.sh d # decrease brightness

# Move between grouped windows
bind = $mainMod CTRL , H, changegroupactive, b
bind = $mainMod CTRL , L, changegroupactive, f

# Screenshot/Screencapture
bind = $mainMod, P, exec, $scrPath/screenshot.sh s # drag to snip an area / click on a window to print it
bind = $mainMod SHIFT, P, exec, $scrPath/screenshot.sh sf # frozen screen, drag to snip an area / click on a window to print it
bind = $mainMod CONTROL, P, exec, $scrPath/screenshot.sh m # print focused monitor
bind = $mainMod CONTROL SHIFT, P, exec, $scrPath/screenshot.sh p  # print all monitor outputs

# Custom scripts
bind = $mainMod SHIFT, backspace, exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bind = $mainMod SHIFT, right, exec, $scrPath/swwwallpaper.sh -n # next wallpaper
bind = $mainMod SHIFT, left, exec, $scrPath/swwwallpaper.sh -p # previous wallpaper
bind = $mainMod SHIFT, up, exec, $scrPath/wbarconfgen.sh n # next waybar mode
bind = $mainMod SHIFT, down, exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bind = $mainMod SHIFT, O, exec, $scrPath/wallbashtoggle.sh  # toggle wallbash on/off
bind = $mainMod SHIFT, R, exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bind = $mainMod SHIFT CONTROL, T, exec, pkill -x rofi || $scrPath/themeselect.sh # theme select menu
bind = $mainMod SHIFT CONTROL, A, exec, pkill -x rofi || $scrPath/rofiselect.sh # rofi style select menu
bind = $mainMod SHIFT CONTROL, W, exec, pkill -x rofi || $scrPath/swwwallselect.sh # rofi wall select menu
bind = $mainMod SHIFT, X, exec, pkill -x rofi || $scrPath/themestyle.sh # launch theme style select menu
bind = $mainMod SHIFT, semicolon, exec, pkill -x rofi || $scrPath/cliphist.sh c  # open Pasteboard in screen center
bind = $mainMod SHIFT, K, exec, $scrPath/keyboardswitch.sh # change keyboard layout
bind = $mainMod, slash, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
bind = $mainMod SHIFT CONTROL, M, exec, pkill -x rofi || $scrPath/animations.sh # launch animations Manager

# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d
bind = SUPER, Tab, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, exec, $scrPath/with_close_special.sh name:main
bind = $mainMod, 2, exec, $scrPath/with_close_special.sh 2
bind = $mainMod, 3, exec, $scrPath/with_close_special.sh 3
bind = $mainMod, 4, exec, $scrPath/with_close_special.sh 4
bind = $mainMod, X, exec, $scrPath/with_close_special.sh name:Browser
bind = $mainMod, 5, exec, $scrPath/with_close_special.sh 5
bind = $mainMod, 6, exec, $scrPath/with_close_special.sh 6
bind = $mainMod, 7, exec, $scrPath/with_close_special.sh 7
bind = $mainMod, 8, exec, $scrPath/with_close_special.sh 8
bind = $mainMod, 9, exec, $scrPath/with_close_special.sh 9
bind = $mainMod, 0, exec, $scrPath/with_close_special.sh name:chat

# Switch workspaces relative to the active workspace with mainMod + CTRL + [←→]
bind = $mainMod CTRL, right, workspace, r+1 
bind = $mainMod CTRL, left, workspace, r-1

# move to the first empty workspace instantly with mainMod + CTRL + [↓]
bind = $mainMod CTRL, down, workspace, empty 

# Resize windows
binde = $mainMod CONTROL, l, resizeactive, 30 0
binde = $mainMod CONTROL, h, resizeactive, -30 0
binde = $mainMod CONTROL, k, resizeactive, 0 -30
binde = $mainMod CONTROL, j, resizeactive, 0 30

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, name:main
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, X, movetoworkspace, name:Browser
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, name:chat

# Move active window to a relative workspace with mainMod + CTRL + ALT + [←→]
bind = $mainMod CTRL SHIFT, right, movetoworkspace, r+1
bind = $mainMod CTRL SHIFT, left, movetoworkspace, r-1

# Move active window around current workspace with mainMod + SHIFT + CTRL [←→↑↓]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
# binded = $mainMod SHIFT $CONTROL, left, Move activewindow left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
binded = $mainMod SHIFT $CONTROL, right, Move activewindow right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
binded = $mainMod SHIFT $CONTROL, up, Move activewindow up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
binded = $mainMod SHIFT $CONTROL, down, Move activewindow down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d
bind = $mainMod, RETURN, swapnext
bind = $mainMod SHIFT $CONTROL, h, movewindow, l
bind = $mainMod SHIFT $CONTROL, l, movewindow, r
bind = $mainMod SHIFT $CONTROL, k, movewindow, u
bind = $mainMod SHIFT $CONTROL, j, movewindow, d


# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/Resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Special workspaces (scratchpad)
bind = $mainMod SHIFT, SPACE, movetoworkspacesilent, special:spe
bind = $mainMod, SPACE, togglespecialworkspace, spe

# bind = $mainMod SHIFT, E, movetoworkspacesilent, special:wechat
# bind = $mainMod, E, togglespecialworkspace, wechat

# bind = $mainMod SHIFT, Q, movetoworkspacesilent, special:qq
# bind = $mainMod, Q, togglespecialworkspace, qq

bind = $mainMod SHIFT, W, movetoworkspacesilent, special:code
bind = $mainMod, W, togglespecialworkspace, code

# Toggle Layout
bind = $mainMod, O, togglesplit, # dwindle

# Move window silently to workspace Super + Alt + [0-9]
bind = $mainMod CONTROL, 1, movetoworkspacesilent, name:main
bind = $mainMod CONTROL, 2, movetoworkspacesilent, 2
bind = $mainMod CONTROL, 3, movetoworkspacesilent, 3
bind = $mainMod CONTROL, 4, movetoworkspacesilent, 4
bind = $mainMod CONTROL, X, movetoworkspacesilent, name:Browser
bind = $mainMod CONTROL, 5, movetoworkspacesilent, 5
bind = $mainMod CONTROL, 6, movetoworkspacesilent, 6
bind = $mainMod CONTROL, 7, movetoworkspacesilent, 7
bind = $mainMod CONTROL, 8, movetoworkspacesilent, 8
bind = $mainMod CONTROL, 9, movetoworkspacesilent, 9
bind = $mainMod CONTROL, 0, movetoworkspacesilent, 10

# Trigger when the switch is turning off, Might cause bugs. Recommend to use logind instead.
#bindl= , switch:on:Lid Switch, exec, swaylock && systemctl suspend

bind = $mainMod, TAB, workspace, previous # cycle
bind = $mainMod, semicolon, centerwindow # window center
bind = $mainMod K, S, exec, pkill -x kanshi || kanshi& # kanshi
bind = $mainMod CONTROL SHIFT, D, exec, echo 'cycle pause' | socat - /tmp/mpv-socket # pause video wallpaper
# bind = $mainMod CONTROL SHIFT, M, exec, $scrPath/scripts/set_video_wallpaper.sh /data/wallpaper/floating.mp4
bind = $mainMod CONTROL SHIFT, M, exec, ~/.config/hyprdots/scripts/set_video_wallpaper.sh /data/wallpaper/floating.mp4 # set video wallpaper
bind = $mainMod CONTROL SHIFT, N, exec, pkill -x mpvpaper # kill video wallpaper
bind = $mainMod CONTROL SHIFT, B, exec, $scrPath/keybinds_hint.sh # keybinds hints

# pyprland
bind = $mainMod, Q, exec, pypr toggle term
bind = $mainMod, C, exec, pypr toggle typora
bind = $mainMod, A, exec, pypr toggle qq
bind = $mainMod SHIFT, A, exec, $scrPath/focus_and_center_by_class.sh QQ
bind = $mainMod, D, exec, pypr toggle obsidian
bind = $mainMod, E, exec, pypr toggle music
bind = $mainMod SHIFT, F, exec, pypr fetch_client_menu
bind = $mainMod CONTROL, F, exec, pypr unfetch_client

bind = $mainMod, I, exec, pypr layout_center toggle # toggle the layout
# focus change keys
# bind = $mainMod, left, exec, pypr layout_center prev
# bind = $mainMod, right, exec, pypr layout_center next
# bind = $mainMod, up, exec, pypr layout_center prev2
# bind = $mainMod, down, exec, pypr layout_center next2
